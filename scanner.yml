.boost_setup:
  image: "docker:20.10.23"

  before_script:
    - apk add --no-cache bash curl git openssh-client
    - |
        boost_init_config () {
          boost_log_info () {
            printf "$(date +'%H:%M:%S') [\033[34m%s\033[0m] %s\n" "INFO" "${*}"
          }

          boost_log_info "initializing configuration"

          export BOOST_TMP_DIR=${BOOST_TMP_DIR:-${WORKSPACE_TMP:-${TMPDIR:-/tmp}}}
          export BOOST_EXE=${BOOST_EXE:-${BOOST_TMP_DIR}/boost-cli/latest}

          export BOOST_CLI_URL=${BOOST_CLI_URL:-https://assets.build.boostsecurity.io}
                 BOOST_CLI_URL=${BOOST_CLI_URL%*/}
          export BOOST_DOWNLOAD_URL=${BOOST_DOWNLOAD_URL:-${BOOST_CLI_URL}/boost-cli/get-boost-cli}

          export BOOST_LOG_COLORS="true"
        }

        boost_init_cli () {
          mkdir -p "${BOOST_TMP_DIR}"
          curl --silent "${BOOST_DOWNLOAD_URL}" | bash
        }

        boost_cli_scan () {
          # shellcheck disable=SC2086
          if ! ${BOOST_EXE} scan repo ${BOOST_CLI_ARGUMENTS:-}; then
            exit $?
          fi
        }

        boost_init_config
        boost_init_cli

.boost_dind:
  services:
    - name: "docker:20.10.23-dind"
      alias: dockerdaemon
      # Support for listening on TCP without authentication or explicit
      # intent to run without authentication will be removed in the next
      # release
      command: ["--host", "tcp://0.0.0.0:2375", "--tls=false"]

  variables:
    DOCKER_HOST: "tcp://dockerdaemon:2375/"
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

.boost_rules:
  rules:
    # execute on pushes to the default branch
    - if: ($CI_PIPELINE_SOURCE == "push") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    # execute on merge request
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")

.boost_scan:
  extends:
    - .boost_setup
    - .boost_dind
    - .boost_rules
  script:
    - boost_cli_scan
  variables:
    GIT_DEPTH: 1
